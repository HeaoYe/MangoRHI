cmake_minimum_required(VERSION 3.2)

if (PROJECT_BINARY_DIR STREQUAL PROJECT_SOURCE_DIR)
    message("WARN: PROJECT_BINARY_DIR == PROJECT_SOURCE_DIR")
endif()

if (NOT CMAKE_BUILD_TYPE)
    message("default set CMAKE_BUILD_TYPE to Release")
    set(CMAKE_BUILD_TYPE Release)
endif()

if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    message("DEBUG MODE")
    add_definitions(-DNDEBUG)
endif()

set(CMAKE_C_STANDARD 17)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_CXX_COMPILER clang++)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
enable_language(CXX)

if (WIN32)
    add_definitions(-DNOMINMAX -D_USE_MATH_DEFINES)
endif()

if (NOT MSVC)
    find_program(CCACHE_PROGRAM ccache)
    if (CCACHE_PROGRAM)
        message("Found CCache: ${CCACHE_PROGRAM}")
        set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ${CCACHE_PROGRAM})
        set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ${CCACHE_PROGRAM})
    endif()
endif()

set(spdlog_DIR ../../thirdparty/spdlog/build)
if(NOT TARGET spdlog)
    find_package(spdlog REQUIRED)
endif()

if(NOT TARGET Vulkan)
    find_package(Vulkan REQUIRED)
endif()

project(ImGuiTest)
file(GLOB sources imgui/*.cpp)
add_executable(ImGuiTest main.cpp ${sources} imgui/backends/imgui_impl_glfw.cpp imgui/backends/imgui_impl_vulkan.cpp)
target_include_directories(ImGuiTest PUBLIC ../../include)
target_include_directories(ImGuiTest PUBLIC ../../thirdparty/stb)
target_include_directories(ImGuiTest PUBLIC imgui)
target_link_libraries(ImGuiTest PUBLIC spdlog::spdlog $<$<BOOL:${MINGW}>:ws2_32>)
target_link_libraries(ImGuiTest PUBLIC vulkan)
target_link_directories(ImGuiTest PUBLIC ../../build)
target_link_libraries(ImGuiTest PUBLIC MangoRHI glfw)
